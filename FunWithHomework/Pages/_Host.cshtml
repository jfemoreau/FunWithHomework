@page "/"
@namespace FunWithHomework.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Devoirs en folie!</title>
    <base href="~/" />
    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link href="css/site.css" rel="stylesheet" />
</head>
<body>
    <app>
        <component type="typeof(App)" render-mode="ServerPrerendered" />
    </app>

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            Une erreur est survenue. Cette application peut ne plus répondre tant qu'elle n'est pas rafraîchie.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>

    <script src="_framework/blazor.server.js"></script>
    <script>
        function ToggleClass(element, className) {
            if (element == null) {
                return;
            }

            if (element.classList.contains(className)) {
                element.classList.remove(className);
            } else {
                element.classList.add(className);
            }
        }

        function ToggleClassById(elementId, className) {
            element = document.getElementById(elementId);
            ToggleClass(element, className);
        }

        function AddClass(element, className) {
            if (element == null) {
                return;
            }

            element.classList.add(className);           
        }

        function AddClassById(elementId, className) {
            element = document.getElementById(elementId);
            AddClass(element, className);
        }

        function RemoveClassById(elementId, className) {
            element = document.getElementById(elementId);
            RemoveClass(element, className);
        }

        function RemoveClass(element, className) {
            if (element == null) {
                return;
            }

            if (element.classList.contains(className)) {
                element.classList.remove(className);
            }
        }

        function ContainsClassById(elementId, className) {
            element = document.getElementById(elementId);
            return ContainsClass(element, className);
        }

        function ContainsClass(element, className) {
            if (element == null) {
                return false;
            }

            return element.classList.contains(className);
        }

        function FileSaveAs(filename, fileContent) {
            var link = document.createElement('a');
            link.download = filename;
            link.href = "data:text/plain;charset=utf-8," + encodeURIComponent(fileContent)
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
        }

        function SetFocusById(elementId) {
            var element = document.getElementById(elementId);
            if (element == null) {
                return;
            }

            element.focus();
        }

    </script>

</body>
</html>
